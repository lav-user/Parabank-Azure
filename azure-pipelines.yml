# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    
    # Test PVA
    echo -e "\nTesting Virtual Assets.\n"
    #curl -iv --raw http://localhost:9080/v1/HelloWorld -o test.log
    #cat test.log
    echo "Starting Pipeline Execution."
    echo "Create ./temp directory for volume mount."
    mkdir temp
    echo ${PWD}
    echo "Copy SOAtest project contents to volume directory."
    cp -R $(soatest.project) temp/.
   
    # Set Up and write .properties file
    echo  -e "\n~~~\nSetting up and creating soatestcli.properties file.\n"
    echo $"
    license.network.auth.enabled=true  
    license.network.password=$(license.server.password)
    license.network.url=$(license.server.url)
    license.network.use.specified.server=true
    license.network.user=$(license.server.username)
    soatest.license.network.edition=custom_edition
    soatest.license.custom_edition_features=RuleWizard, Command Line, SOA, Web, Server API Enabled, Message Packs, Advanced Test Generation Desktop, Requirements Traceability, API Security Testing
    soatest.license.use_network=true
    virtualize.license.network.edition=performance_server_edition
    virtualize.license.use_network=true" >> temp/soatestcli.properties
    echo -e "\nDebug -- Verify workspace contents.\n"
    ls -R
    echo -e "\nDebug -- Verify soatestcli.properties file contents."
    cat temp/soatestcli.properties

    # Run Docker container with mount and run tests
    echo -e "\n~~~\nRun SOAtestCLI Docker container & mount ./temp volume.\n"
    docker --version

    docker run -i \
    -u 0:0 \
    -e ACCEPT_EULA=true \
    -v "$(pwd)/temp:/temp" \
    parasoft/soavirt /bin/bash -c " \
    cat /temp/soatestcli.properties; \
    soatestcli \
    -settings /temp/soatestcli.properties \
    -import /temp/$(soatest.project); \
    ls
    soatestcli \
    -resource / \
    -config 'user://Example Configuration' \
    -settings /temp/soatestcli.properties \
    -report /temp"
    echo -e "\nDone."
  displayName: 'Test Virtual Assets'

- script: |

    # Release
    echo -e "\nPush assets to PROD.\n"
    echo Placeholder
    echo -e "\nDone."
  displayName: 'Push to PROD'
